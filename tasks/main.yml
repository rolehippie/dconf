# Standards: 1.2
---
- name: Install required packages
  loop:
    - dconf-service
  package:
    name: "{{ item }}"
    state: present
  tags:
    - dconf

- name: Write profile config
  notify:
    - Update dconf
  loop: "{{ dconf_default_profiles + dconf_extra_profiles }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.state | default('present') == 'present'
  copy:
    content: "{{ item.profile }}"
    dest: "/etc/dconf/profile/{{ item.name }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - dconf

- name: Remove profile config
  notify:
    - Update dconf
  loop: "{{ dconf_default_profiles + dconf_extra_profiles }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.state | default('present') == 'absent'
  file:
    path: "/etc/dconf/profile/{{ item.name }}"
    state: absent
  tags:
    - dconf

- name: Create profile dir
  notify:
    - Update dconf
  loop: "{{ dconf_default_profiles + dconf_extra_profiles }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.state | default('present') == 'present'
  file:
    path: "/etc/dconf/db/{{ item.name }}.d"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
    state: directory
  tags:
    - dconf

- name: Remove profile dir
  notify:
    - Update dconf
  loop: "{{ dconf_default_profiles + dconf_extra_profiles }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.state | default('present') == 'absent'
  file:
    path: "/etc/dconf/db/{{ item.name }}.d"
    state: absent
  tags:
    - dconf

- name: Write profile entries
  notify:
    - Update dconf
  loop: "{{ (dconf_default_profiles + dconf_extra_profiles) | subelements('configs', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}:{{ item.1.name }}"
  when: item.1.state | default('present') == 'present'
  copy:
    content: "{{ item.1.config }}"
    dest: "/etc/dconf/db/{{ item.0.name }}.d/{{ item.1.name }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - dconf

- name: Remove profile entries
  notify:
    - Update dconf
  loop: "{{ (dconf_default_profiles + dconf_extra_profiles) | subelements('configs', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}:{{ item.1.name }}"
  when: item.1.state | default('present') == 'absent'
  file:
    path: "/etc/dconf/db/{{ item.0.name }}.d/{{ item.1.name }}"
    state: absent
  tags:
    - dconf

...
